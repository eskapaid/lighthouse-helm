{{- if .Values.enabled }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "lighthouse-validator.fullname" . }}
  labels:
    {{- include "lighthouse-validator.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "lighthouse-validator.selectorLabels" . | nindent 6 }}
  serviceName: {{ include "lighthouse-validator.fullname" . }}  
  replicas: 1
  template:
    metadata:
      labels:
        {{- include "lighthouse-validator.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: copy-keystore
          image: busybox
          command: ["/bin/sh", "-c"]
          args:
          - |
            set -e
            cd /data/keystores/
            echo "Importing keystores ..."
            for name in *.json; do
              echo "Importing ${name} ..."
              mkdir -p /data/validators/imported/${name}
              cp $name /data/validators/imported/${name}/voting-keystore.json
              echo "Imported ${name}"
            done
          volumeMounts:
          - name: validator-data
            mountPath: /data
          - name: keystores
            mountPath: /data/keystores
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- if .Values.container.command }}
          command:
{{ toYaml .Values.container.command | indent 12 }}
          {{- end }}
          {{- if .Values.container.args }}
          args:
{{ toYaml .Values.container.args | indent 12 }}
          {{- end }}
          livenessProbe:
            {{- toYaml .livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .readinessProbe | nindent 12 }}
          resources: 
{{ toYaml .Values.resources | indent 12 }}
          volumeMounts:
            - name: validator-data
              mountPath: /data
            - name: passwords
              mountPath: /data/secrets
              readOnly: true
          ports:
            - name: metrics
              containerPort: {{ .Values.ports.metrics }}
    {{- with .nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      - name: keystores
        secret:
          secretName: {{ .keystoreSecretName }}
      - name: passwords
        secret:
          secretName: {{ .passwordSecretName }}
      {{- if not .Values.storage.persistent }}
      - name: validator-data
        emptyDir: {}
      {{- end }}
  {{- if .Values.storage.persistent }}
  volumeClaimTemplates:
    - metadata:
        name: validator-data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: {{ .Values.storage.capacity | quote }}
  {{- end }}

{{- end }}
